CREATE TABLE MOONS (
ID INT PRIMARY KEY,
MOON_NAME VARCHAR2(60),
PLANET_ID INT 
);
/
CREATE TABLE PLANETS (
PLANET_ID INT PRIMARY KEY,
PLANET_NAME VARCHAR2(60),
PLANET_LOCATION VARCHAR2(60)
);
/
ALTER TABLE MOONS
ADD CONSTRAINT FK_PLANET_ID
FOREIGN KEY (PLANET_ID) REFERENCES PLANETS(PLANET_ID);
/
CREATE SEQUENCE SQ_MOON_ID_PK
START WITH 1000
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_PLANET_ID_PK
START WITH 1000
INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER TR_INSERT_MOON
BEFORE INSERT ON MOONS -- SPECIFY WHICH DML OPERATION, BEFORE/AFTER, AND WHICH TABLE
FOR EACH ROW
BEGIN 
    SELECT SQ_MOON_ID_PK.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER TR_INSERT_PLANETS
BEFORE INSERT ON PLANETS -- SPECIFY WHICH DML OPERATION, BEFORE/AFTER, AND WHICH TABLE
FOR EACH ROW
BEGIN 
    SELECT SQ_PLANET_ID_PK.NEXTVAL INTO :NEW.PLANET_ID FROM DUAL;
END;
/
INSERT INTO MOONS(MOON_NAME)
VALUES ('EARTHS-MOON');

COMMIT;

INSERT INTO PLANETS(PLANET_NAME, PLANET_LOCATION)
VALUES ('EARTH', 'MILKY WAY');
/
INSERT INTO PLANETS(PLANET_NAME, PLANET_LOCATION)
VALUES ('MARS', 'MILKY WAY');
/
INSERT INTO MOONS(MOON_NAME)
VALUES ('PHOBOS');
/
INSERT INTO MOONS(MOON_NAME)
VALUES ('DEIMOS');
/
UPDATE MOONS SET PLANET_ID = 1000
WHERE ID = 1006;
/
UPDATE MOONS SET PLANET_ID = 1001
WHERE ID = 1007;
/
UPDATE MOONS SET PLANET_ID = 1001
WHERE ID = 1008;
/
SELECT M.ID, M.MOON_NAME, P.PLANET_ID, P.PLANET_NAME, P.PLANET_LOCATION 
FROM MOONS M INNER JOIN PLANETS P ON
M.PLANET_ID = P.PLANET_ID ORDER BY M.ID;